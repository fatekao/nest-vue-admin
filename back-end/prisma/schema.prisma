// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// ==================== 用户表 ====================
// 存储系统用户的基本信息
model SysUser {
  id              Int        @id @default(autoincrement()) @map("user_id")                                           // 用户ID，主键，自增
  username        String     @unique @map("username")                                                                  // 用户名，唯一
  password        String     @map("password")                                                                           // 密码（应为加密后的哈希值）
  nickName        String     @map("nick_name")                                                                         // 昵称
  gender          Int?       @default(1) @map("gender")                                                                // 性别：1-男，0-女 (或使用枚举)
  email           String?    @unique @map("email")                                                                     // 邮箱，唯一
  phone           String?    @unique @map("phone")                                                                     // 手机号，唯一
  avatar          String?    @map("avatar")                                                                            // 头像URL
  status          Int?       @default(1) @map("status")                                                                // 状态：0-禁用，1-正常，2-锁定
  isDeleted       Boolean?   @default(false) @map("is_deleted")                                                        // 删除标志：false-未删除，true-已删除 (软删除)
  lastLoginIp     String?    @map("last_login_ip")                                                                     // 最后一次登录IP地址
  lastLoginTime   DateTime?  @map("last_login_time")                                                                   // 最后一次登录时间
  remark          String?    @map("remark")                                                                            // 备注信息
  createTime      DateTime?  @default(now()) @map("create_time")                                                       // 创建时间，默认当前时间
  updateTime      DateTime?  @updatedAt @map("update_time")                                                            // 最后更新时间，自动更新
  createBy        Int?       @map("create_by")                                                                         // 创建者用户ID (关联 SysUser.id)
  updateBy        Int?       @map("update_by")                                                                         // 最后更新者用户ID (关联 SysUser.id)

  roles           SysRole[] // 用户与角色的多对多关系 (通过隐式中间表 sys_user_roles)

  @@map("sys_user")
}

// ==================== 角色表 ====================
// 存储系统角色信息
model SysRole {
  id              Int        @id @default(autoincrement()) @map("role_id")                                             // 角色ID，主键，自增
  name            String?    @unique @map("name")                                                                      // 角色名称，唯一
  key             String?    @unique @map("key")                                                                       // 角色权限字符串标识符，唯一 (如 'admin', 'editor')
  status          Int?       @default(0) @map("status")                                                                // 状态：0-正常，1-停用
  isDeleted       Boolean?   @default(false) @map("is_deleted")                                                        // 删除标志：false-未删除，true-已删除 (软删除)
  remark          String?    @map("remark")                                                                            // 备注信息
  createTime      DateTime?  @default(now()) @map("create_time")                                                       // 创建时间，默认当前时间
  updateTime      DateTime?  @updatedAt @map("update_time")                                                            // 最后更新时间，自动更新
  createBy        Int?       @map("create_by")                                                                         // 创建者用户ID (关联 SysUser.id)
  updateBy        Int?       @map("update_by")                                                                         // 最后更新者用户ID (关联 SysUser.id)

  users           SysUser[]    // 角色与用户的多对多关系 (通过隐式中间表 sys_user_roles)
  permissions     SysPermission[] // 角色与权限资源的多对多关系 (通过隐式中间表 sys_role_permissions)

  @@map("sys_role")
}

// ==================== 权限资源表 ====================
// 存储菜单、按钮等所有需要进行权限控制的系统资源
model SysPermission {
  id              Int        @id @default(autoincrement()) @map("permission_id")                                       // 权限资源ID，主键，自增
  name            String     @map("name")                                                                              // 权限资源名称 (如 '用户管理', '新增用户')
  type            Int        @default(0) @map("type")                                                                  // 权限资源类型: 0-目录, 1-菜单, 2-按钮(权限点)
  parentId        Int?       @default(0) @map("parent_id")                                                             // 父级权限资源ID，指向自身表的 id 字段，0 表示顶级资源
  parent          SysPermission? @relation("PermissionChildren", fields: [parentId], references: [id], onDelete: NoAction, onUpdate: NoAction) // 自关联：父级资源 (导航关系)
  children        SysPermission[] @relation("PermissionChildren")                                                       // 自关联：子级资源列表 (导航关系)
  path            String?    @map("path")                                                                              // 路由路径 (主要用于 type=1 的菜单)
  component       String?    @map("component")                                                                         // 组件路径 (主要用于 type=1 的菜单，前端框架使用)
  icon            String?    @map("icon")                                                                              // 图标 (主要用于 type=0/1 的目录/菜单)
  permission      String?    @unique @map("permission")                                                                // 权限字符串标识符，唯一 (如 'sys:user:list', 'sys:user:create') - 核心权限控制字段
  orderNum        Int        @default(0) @map("order_num")                                                             // 显示顺序
  isVisible       Boolean    @default(true) @map("is_visible")                                                         // 是否可见 (主要用于控制菜单是否显示)
  isCacheable     Boolean    @default(true) @map("is_cacheable")                                                       // 是否可缓存 (主要用于前端控制页面缓存)
  isDeleted       Boolean    @default(false) @map("is_deleted")                                                        // 删除标志：false-未删除，true-已删除 (软删除)
  createTime      DateTime?  @default(now()) @map("create_time")                                                       // 创建时间，默认当前时间
  updateTime      DateTime?  @updatedAt @map("update_time")                                                            // 最后更新时间，自动更新
  createBy        Int?       @map("create_by")                                                                         // 创建者用户ID (关联 SysUser.id)
  updateBy        Int?       @map("update_by")                                                                         // 最后更新者用户ID (关联 SysUser.id)

  roles           SysRole[] // 权限资源与角色的多对多关系 (通过隐式中间表 sys_role_permissions)

  @@map("sys_permission")
  @@index([parentId], name: "idx_parent_id") // 为 parentId 添加索引以优化查询 // 定义自关联关系的名称，避免歧义
}